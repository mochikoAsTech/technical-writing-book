= テクニカルライティングをはじめる前に

テクニカルライティングの具体的な手法を学ぶ前に、まずは「分かりやすい文章を書く」とはどういうことなのかを一緒に考えてみましょう。

//pagebreak

== テクニカルライティングとは

「@<title>{introduction}」に書いたとおり、テクニカルライティングとは@<ttb>{実用文を分かりやすく書くための技術}です。

ですが日本で生まれ育った人のほとんどは、誰でもある程度の日本語は書けるはずです。誰にでもできる「文章を書くこと」と「テクニカルライティング」にはいったい何の違いがあるのでしょうか？

=== 「文章を書くこと」と「テクニカルライティング」の違い

文章を書くこととテクニカルライティングの違いを知るため、まずは@<ttb>{実用文とは何なのか}を掘り下げていきましょう。実用文は、以下のような特徴@<fn>{styleguide}を備えています。

//footnote[styleguide][参考：日本語スタイルガイド（第3版）の「1.3.2 実用文の特徴」 @<href>{https://jtca.org/learn-tc/publication/guide_jsg/}]

 * 対象となる物事について説明している
 * 論理的である
 * 誤解を生まない
 * 簡潔で明快である
 * 読み手の行動を促す
 * 成果物が文章である

つまり実用文とは、@<ttb>{対象となる「何か」について論理的かつ簡潔に説明をしていて、それを読むことで何をどうすればいいのかが分かるような文章}ということですね。文学作品とは違って「流れるような文体」や「人の心を揺さぶる表現」は必要ありません。

学生時代に宿題の読書感想文で400字詰めの原稿用紙2枚以上を求められ、大して書くこともないのに長く引き延ばそうとして苦しんだ経験がある人も多いと思います。ですが実用文では「長ければ長いほどいい」という尺度は存在しません。読んで得られる情報が同じなら端的な文章の方がいいからです。

実用文は詩や小説とは異なる、という話は理解しやすいと思います。その一方で、一見すると実用文のようですが次のようにテクニカルライティングの技術だけでは書けないものもあります。

 * 法務文書
 ** 特殊な専門性に基づいて書かれる法務文書は、優先事項がテクニカルライティングとは異なります。法令遵守が最優先であり、読みやすさや簡潔さはさほど重視されません。
 * 広告やキャッチコピー
 ** 読み手に強烈な印象を残して購買に繋げることを重視するため、迂遠で難解な言い回しや抽象的な表現が正解になり得ます。

テクニカルライティングという名前だけを聞くと、なんとなく「利用規約をレビューする」「製品のよさをつたえるキャッチーな見出しを書く」といったことにも使えそうな気がしてしまいますが、これらのように目指すべき成果物が異なるものものあります。テクニカルライティングはあくまで@<ttb>{実用文を分かりやすく書く}ための技術であり、ありとあらゆる場面でこの書き方が常に正解という訳ではありません。

//pagebreak

== 「知らない」と書けない

さて、話は変わりますが「自転車」を知っていますか？

何を唐突にと思われるかもしれませんが、ここからちょっと「自転車を描く」という体験にお付き合いください。

=== 自転車の絵を描いてみよう

では自転車の絵を描いてみましょう。あなたがよく知っている自転車の姿を頭に思い浮かべて、下手でもいいのでペンを手に取ってやってみてください。（@<img>{write-bicycle}）

//image[write-bicycle][自転車の絵を描いてみよう][scale=1]{
//}

筆者もあなたと一緒に自転車を描いてみます。自転車にはタイヤがありますよね……大きいタイヤが2つ……そしてその2つの間になんか太いパイプみたいなのがあったはず……サドルもありますね、座るところです。あとなんか漕ぐところがある……ペダル……？あれ、ペダル？ペダルってどうやって回していた？回る機構が必要なはず……どうなってましたっけ？チェーン？とタイヤが繋がってるはずですよね。チェーンって前輪と後輪どっちと繋がってましたっけ？後輪かな……あとハンドル！ハンドルがあります！カゴもあります……カゴってどこについてた？あー、あとなんかタイヤの上に泥よけがあったかもしれません。我が家の自転車は前だけじゃなく後ろにもカゴが……あれ？自転車ってこんなでしたっけ？なんか変だな。自転車って……どんな形でしたっけ？？（@<img>{hand-bicycle}）

//image[hand-bicycle][筆者が描いた変な生き物みたいな自転車の絵][scale=0.8]{
//}

そしてこんな感じの自転車の絵が生まれました。うまく描けましたか？筆者は全然うまく描けませんでした……。

もともと自転車に詳しい人を除いて、恐らくはほとんどの人はこんな感じの「えー、自転車ってこんなだっけ？」という絵が生まれたことと思います。

さて、正しい自転車の絵がこちらです。（@<img>{correct-bicycle}）

//image[correct-bicycle][正しい自転車の絵][scale=1]{
//}

見慣れた自転車の姿ですね。私たちは「自転車がどんな見た目で、どんな乗り物かなんて知っている」と思っていたはずです。でも実際は、自転車がどんな構造でどういう理屈でできているのかという知識がないので、自転車の絵は思っていたよりうまく描けませんでした。

=== 自転車を「知らない」と描けない

少し自転車の構造について解説していきます。

まず、自転車の骨組みは「ダイヤモンドフレーム」とも呼ばれており、どんな方向からの力に対しても剛性が高い、かつ低重心で操縦しやすい構造にするため、三角形を2つ組み合わせた斜めの菱形のような形をしています。このことを知っていれば、まず@<ttb>{中心部に菱形の骨組み}が描けます。

次に自転車に乗っているときの自分の様子を思い浮かべてみましょう。通常、あなたが椅子に座ったとき、膝はお尻の位置よりも前にあるでしょうか？それともお尻の真下にあるでしょうか？人体の構造上、椅子に座ったとき、膝は90度に曲がった状態でお尻よりも前方にあるはずです。このことから、ペダルの根元にある丸い部分、@<ttb>{フロントギアはサドルよりも位置が少し前に来る}ということが分かります。

またハンドルと前輪は、フロントフォーク@<fn>{fork}いう部品によって繋がっています。フロントフォークは前輪の中心部から真上に伸びるのではなく、乗っている人が舵取りをしやすいようサドル側に向かって少し斜めに生えています。このことを知っていると、@<ttb>{前輪からハンドルに向かって斜めに伸びる}フロントフォークが描けます

//footnote[fork][forkは分岐という意味で、フロントフォークは名前のとおり前輪のタイヤを挟んで二股に分かれています。Gitでブランチを分岐させるforkや、食器のフォークと同じフォークですね。]

舵取りをする前輪は左右に動くので、そちらにチェーンを繋ぐと自転車の構造が複雑になってしまいます。そのためペダルを漕ぐ力は後輪に繋がる、つまり自転車は後輪駆動になっています。これを理解していると、@<ttb>{チェーンは前輪ではなく後輪と繋げて描くべき}だと分かります。

こんなふうに、自転車という対象物に対する知識があれば、パーツの位置をすべて暗記していなくても自ずと正しい自転車の絵が描けるようになります。@<ttb>{必要なものは絵心やセンスではなく知識}なのです。逆に言えば、対象物を知らないと上手な絵は描けません。

そして自分が対象物を思っていたより「知らない」ということに、我々は気付いていないことが多いのです。上手な絵は、対象物のことを知らないと描けません。それと同じように、分かりやすい実用文は、文章力のあるなし以前に@<ttb>{対象物をよく知らないと書けない}のです。

=== うまく書けないときに足りないのは文章力か技術力か

「割と知っている」「結構分かっている」はずの技術について本やブログを書こうとしたとき、書く前は簡単にできそうな気がするのに、実際にはじめてみるとなぜか書けない……と悩んだことがありませんか？既に使ったことがあり、分かっている技術であっても、理解の解像度が高くないと筆はなかなか進みません。

たとえば「ハッシュドビーフ作りの手順書を作ってください」という依頼があったとして、同じ「ハッシュドビーフを知っている人」でも次のように、理解度によって手順書をすらすら書けるかどうかや、書かれた手順の分かりやすさはかなり違ってくるはずです。

 * 食べたことがあるけどそもそも自炊はしない、という理解度の人
 * 食べたことがあるけど作ったことはなくて、「要は肉と野菜とルゥを買って煮ればいいんだろうな」という理解度の人
 * 食べたことも作ったこともあり、「牛肉とタマネギときのこを買って、切って炒めて煮込んでルゥを入れる料理だ。赤ワインを入れることもある。こびりつくから後片付けのときは油汚れをお湯でよく流して洗わないといけないな」という理解度の人

「分かっているはずの技術なのに、自分は言葉にするのが下手でなかなかうまく伝えられない」実は不足しているのは出力の部分ではなく、入力や理解の部分なのかもしれません。「書こうとするとなぜか筆が進まず、頑張って書いてもふわっとした説明になってしまう……」と思ったら、そのもやもやっとした部分だけ理解の解像度が低くなっていることを疑って、改めて対象の理解に努めてみましょう。

私たちは対象物について「分かった！」の山と、「何も分かっていなかった……」の谷を越えて、少しずつ理解していきます。まずは自分が@<ttb>{対象物を知っているつもりでも意外と知らない}こと、そして@<ttb>{知らないものについて分かりやすい文章は書けない}ことを最初に知っておいてください。知っているつもりだけど実際は知らないままで体裁の整ったきれいな文章@<fn>{aws}を書いても、それは分かりやすい文章にはなりません。

//footnote[aws][「Amazon CRは、わずかなアクションで素早く安全に喫食可能なフルマネージド統合サービスです。CRを使用すればホットスタンバイ状態のH2OあるいはRawとして麺、醤油または味噌、また葱、肉などを単一のフローとして提供できます。」と言われて、誰がカップ麺のことだと分かるのだろうか……。 @<href>{https://www.itmedia.co.jp/news/articles/2205/10/news123.html}]

美味しい料理を作るには、材料がなければいけません。うまく料理が作れないとしたら、腕より前に材料が足りていない可能性があります。出力するためには先に入力が必要であり、そして材料が不足していることに気付けるのは大抵キッチンに立って料理を作り始めてからです。「書けると思ったのに……全然書けない……何も分かっていなかった……」という挫折はある意味必要なステップであり、これがなければ対象を理解した分かりやすい説明には辿りつけないのです。

== まずはいっぱい読んでいっぱい書こう

「もっと文章をうまく書けるようになりたいです！どんなことに気をつけて書いたら、文章力が上がりますか？」という相談を受けることがありますが、まだ経験の浅い方であれば細かいライティングのテクニックについて学ぶより先に、まずは@<ttb>{なんでもいいからいっぱい読む}といいと思います。

本屋さんで買える技術書も、インターネット上にある公式リファレンスも、個人の技術ブログやZennやQiitaも、いっぱいいっぱい読むと「この説明分かりやすいな」や「この言い方だと自分みたいな初心者には分かりにくいな」のように、参考にしたいお手本のような表現も、使わない方がいいと感じる表現もいっぱい自分の中に溜まっていきます。

レゴブロック@<fn>{lego}と同じで、少ないパーツで何か作れと言われると難易度が高くなります。「この言い回し」とか「こういう表現」とか「こういう説明の仕方」といったいいパーツ、あるいは「こういう構成」や「こういう順番」といったいい組み合わせの例が自分の中にいっぱいあると、それだけ「いい文章」が組み立てやすくなります。

//footnote[lego][レゴはLEGO Juris A/Sの登録商標です。]

そしてたくさん読んでパーツを集めるだけでなく、その溜め込んだパーツを実際に使ってどんどん組み立てて作ってみることが上達への近道です。つまり実用文をいっぱい書いてみましょう。書くことで「あ、こういう系統のパーツが全然足りてない！」ということに気付いて、また読む作業に対して意欲的になれます。

文章を書くことについてまだ自信がないのであれば、筆者からのアドバイスは「細かいことは気にせず、とにかくいっぱい読んでいっぱい書くといいよ」です。

== 完璧主義よりも完成主義

そしていっぱい書くときに大事なのは、「完成させること」です。せっかく色々書いたとしても、中途半端な書きかけがブログの下書きにいっぱい溜まっていたり、思いついた構想ばかりがメモ書きとして積まれていたり、という結局誰にも読んでもらえない状態ではうまくなりません。

完成度を求めた結果、いつまでも出来上がらない、完成させられない完璧主義はやめましょう。完成度にこだわりすぎず、@<ttb>{とにかく完成させて世に出すことを優先}しましょう。一度できあがって人目に触れる場所に出さないと、その次の改善するというステップにも進めません。

そのためには先に〆切を設定することが重要です。〆切もないのに何かを完成させられるほど我々の精神は成熟していません。あそこもここもおかしいし、本当は直したいし、もっとこういうことにも触れたかった、最初の構想と違って何もかも全然足りてないんだけど……一旦これを完成とする！と開き直るためには、自分では動かせない〆切が必要なのです。技術書典のようなイベントに申し込んだり、自社の技術ブログで「こんなことを書きたい」と手を挙げて、ずるずると先延ばしにできないような状況を作りましょう。

それから@<ttb>{「間違ったことを書くのは怖いので○○についてもっと詳しくなったら書こう」と思っていると一生書けません}。なぜなら書きはじめてようやく「あ、この辺の知識が抜けている」という不足に気付くからです。人間は書くことで初めて「○○について詳しくなる」という階段を上り始めます。それに何かを誤解しているとき、人はその事実を自覚できません。目に見える形で自分の理解を外に示し、誰かに間違いを指摘してもらうことで、はじめて「自分が誤解していた」ということに気付けるのです。

ビルの10階に行きたいのなら、あなたに出来ることはまず1階から2階への階段を上り始めることです。「2階とか3階とかそんな低い場所には居られない。俺はもっと高みに……10階に行きたいんだ！」と意識の高いことを言われても、ヘリコプターでもない限り2階や3階を経ずに10階にはたどり着けません。それと同じで、100点満点の完璧な文章が書ける自分になるためには、まずは10点や20点のひどい出来でも文章を何度も完成させるステップを踏まなければなりません。ただの一度も三振をしたことがないままプロ野球選手になった人はいないはずです。

最初に高すぎる目標を立てて、「無駄なことや遠回りは極力したくない。このクオリティが出せるまでは自分は何も書かないし、書いたものも世に出さない！」と思っているといつまでも何も書けず、うまくもなりません。

まずは〆切を定めて、完成させて、世に出しましょう。

===[column] 【コラム】どうやったらテクニカルライターになれますか？

「いまは他の仕事をしているんですが、書くことにも興味があって……IT企業でテクニカルライターになるにはどうしたらいいですか？」という質問をいただくことがあります。そもそもテクニカルライターというポジション自体が職業としてまだあまり認知されていないので、そんな中で存在を知ってもらい、さらに「なりたい」と思ってもらえるのは大変有難いことです。

書いたものを見せてもらうのがいちばん早いので、そんなときは「過去に書いたドキュメントやブログなどはありますか？ZennでもQiitaでもなんでもいいです」と聞くようにしています。これは「プロ野球選手になるにはどうしたら？」と聞かれたときに、普段の練習メニューを教えてもらったり、過去の練習試合の動画を見せてもらったりするような感覚です。

そういうときに「特に何か書いてはいないので、まだ見せられるようなものは何もなくて……」と言われると、お気持ちは分かるものの、正直こちらから言えることがほとんどなくなってしまいます。

テクニカルライターになると、寝ても覚めても書くことに向き合う生活になります。筆者がこの職業を知ったときは「ドキュメントを書いて給料がもらえる？そんな夢のような仕事がこの世に？」と思いましたが、ある人にとっては夢のように楽しいことが、他の人にとっては信じられないような苦行だったりします。好きな技術について頼まれてもいないのにあれこれ書いてしまう、という人にとってはテクニカルライターはきっと天職です。どんなことでもそうですが、長く楽しく続けられるのは「○○に興味があるのでこれからやろう」と思っている人ではなく、「面白そうだから○○をやってみた」と言える人です。@<fn>{wannabe}

===[/column]

//footnote[wannabe][大学教員８年目やってるとワナビーとモノづくり好きの区別がつくようになってくる→「へえ，〇〇がやりたくて大学に入ってきたんだ，でなんで今まではやってないの？」（次週）「え，どうして今週できなかったの？」｜落合陽一 @<href>{https://note.com/ochyai/n/n781fb2209af4}]
