= 英語を書くとか翻訳するとか



日本語話者のエンジニアが英語を書くときにやりがちな失敗

== 例は「ex.」か

日本だと例示（Example）の略でex.って書く人が多いけど、exだと「前の彼女」を「ex-girlfriend」って言ったりするときの「前の」の意味なのでe.g. の方がよさそう。

== 単語や文の単位で翻訳すると危ない

AWSが提供している日本語のドキュメント@<fn>{awsDoc}に、こんな一文がありました。

//footnote[awsDoc][チュートリアル: Amazon EC2 Linux インスタンスの開始方法 @<href>{https://docs.aws.amazon.com/ja_jp/AWSEC2/latest/UserGuide/EC2_GetStarted.html}]

//cmd{
インスタンスを削除するということは、実質的には、そのインスタンスを削除するということです。いったん終了したインスタンスに再接続することはできません。
//}

削除するということは、実質的には削除するということ……進次郎構文@<fn>{shinjiro}みたいになっています。どうしたのでしょうか。

//footnote[shinjiro][「今のままではいけないと思います。だからこそ、日本は今のままではいけないと思っている」のように前半と後半で同じことを繰り返す謎構文のこと。 @<href>{https://dic.nicovideo.jp/a/%E9%80%B2%E6%AC%A1%E9%83%8E%E6%A7%8B%E6%96%87}]

原文と思われる英語@<fn>{original}を当たってみると、どうやらTerminateとDeleteを両方とも「削除」と訳したことで生まれてしまった悲しい文章だったようです。

//footnote[original][Tutorial: Get started with Amazon EC2 Linux instances @<href>{https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EC2_GetStarted.html}]

//cmd{
Terminating an instance effectively deletes it; you can't reconnect to an instance after you've terminated it.
//}

「インスタンス」はAWSにおけるサーバのことです。なので恐らく英語でこう言いたかったのだろう、という意図を汲んで日本語にすると、「サーバの『終了』とは、単に電源を落とすシャットダウンではなく、サーバそのものを『削除』してしまうことを意味します。そのため『終了』させたサーバには二度と接続できないので注意してね」という注意喚起の文章だったのではないかと思われます。@<fn>{startAWS}

//footnote[startAWS][AWS？インスタンス？その辺をもっと詳しく教えてくれ！と思ったら「AWSをはじめよう 改訂第2版 ～AWSによる環境構築を1から10まで～」をどうぞ。 @<href>{https://booth.pm/ja/items/1032590}]

Terminateを英和辞典で引くと「終わらせる」「解除する」という訳が出てきます。「Terminating an instance」で「インスタンスを終わらせる」ということなら、確かに「インスタンスを削除する」と書いてもおかしくはありません。もう1つのDeleteも「削除する」「消す」なので、どちらも「正しく」訳した結果、「削除するということは、実質的には削除するということ」という進次郎構文が生まれてしまったのだと推察します。

この注意喚起文によって何を食い止めたかったのか、という背景を理解せずに単に単語や文の単位で「正しく」翻訳すると、こんなふうに実際は意味を為さない文が生まれてしまうことがあります。

== 前後の文脈やどこに書かれるかを知らずに翻訳はできない

とても簡単な英語を「正しく」翻訳しても、おかしくなってしまうことがあります。たとえば「Take Me Home」を「私を家に連れて行って」と訳すのは、英語がそこまで得意でない人が見ても恐らく正しいと思うはずです。

ですが、これがアプリでログアウトした後の画面に表示されていたらどうでしょう？（@<img>{logout}）

//image[logout][ログアウト画面][scale=1]{
//}

恐らく「Take Me Home」の訳は、「ホームに戻る」が適切だったはずです。その文章がどこに配置されるのか分からずに訳すと、やはり「正しい」のにとても違和感のあるUI文言になってしまうことがあります。@<fn>{kfc}

//footnote[kfc][実在した事例です。ただこういう翻訳を見ると、ひどい訳だと笑う前に、もはや日本が「丁寧に翻訳するコストをかけるほどの市場規模じゃない」と相手にされていない可能性を考えてしまうのであった。 @<href>{https://twitter.com/mochikoAsTech/status/1779009150426767775}]

== スペルミスが心配ならATOKや辞書に頼ろう

ATOKつかうか辞書を引こう。人間はinformationをうっかり複数形のつもりでinformationsにしたりする。

== 英単語や数字の後ろに半角スペースは入れるべきか

== 機械翻訳があれば英語がまったく分からなくても訳せるか

機械翻訳もChatGPTも、しれっと真逆の意味に翻訳したり、間の文章を一文落としてきたり、逆に2回繰り返して訳してきたりする。

機械翻訳はあくまで電動自転車みたいなもので、自力で漕げないときには乗れない（＝乗ると事故るので乗ってはいけない）。

== 技術文書の翻訳に必須なのは「英語力」や「文章力」よりも「技術力」

ことITの分野においては、翻訳に必須な力は対象技術の知識、実際に触ったことがある深度の深い理解であって、日本語の文章力や、英語の文章力はその次。
どれかひとつしか手に入らないなら、絶対に技術力を優先して翻訳者を選ぶべき。

翻訳する人は「文脈が分かっている」と強い。
そもそも何の話か分かっているから、原文が多少説明不足でもピントの合った訳ができる。
技術ドキュメントを書くとき、あるいは翻訳するとき、「何を言っているのか」が分からないと、文法があっているだけで正しいことを何も伝えない、きれいで誤った文章になる。

== 翻訳は「もとの言いたいことに立ち返ってから」

伝えたいことと、実際に発露した文章の違い
発露した文章を元に翻訳しようとすると元のデータ量が減ってるので誤訳が生まれる

言いたいことがあって、そこから原文が生まれる、その時点で情報量は減っている。
JPEGみたいに、保存のたびに情報量が減衰していくので、元の「言いたいこと」に立ち返らずに翻訳をすると、原文から翻訳文になるときさらに情報量が減衰する。
文章としての体を為すため、その減衰を補おうとして、結果嘘が混ざる。

== 翻訳しづらい文章をやめよう

なんか言ってるけど、実際のところ何も言っていない、翻訳しづらい文章はやめよう。


